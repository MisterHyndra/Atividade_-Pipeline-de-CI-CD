@echo off
REM Script para testar a API do Gerenciador de Biblioteca Pessoal
REM Certifique-se de que a aplica√ß√£o est√° rodando em http://localhost:8080

set BASE_URL=http://localhost:8080/api/livros

echo üöÄ Testando API do Gerenciador de Biblioteca Pessoal
echo ==================================================

echo.
echo üìã Listando todos os livros (inicial)
echo ----------------------------------------
curl -X GET "%BASE_URL%" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Criando primeiro livro
echo ----------------------------------------
curl -X POST "%BASE_URL%" -H "Content-Type: application/json" -d "{\"titulo\": \"O Senhor dos An√©is\", \"autor\": \"J.R.R. Tolkien\", \"anoPublicacao\": 1954, \"lido\": true}" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Criando segundo livro
echo ----------------------------------------
curl -X POST "%BASE_URL%" -H "Content-Type: application/json" -d "{\"titulo\": \"1984\", \"autor\": \"George Orwell\", \"anoPublicacao\": 1949, \"lido\": false}" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Criando terceiro livro
echo ----------------------------------------
curl -X POST "%BASE_URL%" -H "Content-Type: application/json" -d "{\"titulo\": \"Dom Casmurro\", \"autor\": \"Machado de Assis\", \"anoPublicacao\": 1899, \"lido\": true}" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Listando todos os livros ap√≥s cria√ß√£o
echo ----------------------------------------
curl -X GET "%BASE_URL%" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Buscando livro por ID (ID: 1)
echo ----------------------------------------
curl -X GET "%BASE_URL%/1" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Atualizando livro (marcando 1984 como lido)
echo ----------------------------------------
curl -X PUT "%BASE_URL%/2" -H "Content-Type: application/json" -d "{\"titulo\": \"1984\", \"autor\": \"George Orwell\", \"anoPublicacao\": 1949, \"lido\": true}" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Verificando atualiza√ß√£o do livro
echo ----------------------------------------
curl -X GET "%BASE_URL%/2" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Tentando buscar livro inexistente (deve retornar 404)
echo ----------------------------------------
curl -X GET "%BASE_URL%/999" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Deletando livro (ID: 3)
echo ----------------------------------------
curl -X DELETE "%BASE_URL%/3" -w "Status: %%{http_code}" -s

echo.
echo.
echo üìã Listando livros ap√≥s dele√ß√£o
echo ----------------------------------------
curl -X GET "%BASE_URL%" -w "Status: %%{http_code}" -s

echo.
echo.
echo ‚úÖ Testes conclu√≠dos!
echo ==================================================
echo üìä Resumo dos testes:
echo    - ‚úÖ Cria√ß√£o de livros
echo    - ‚úÖ Listagem de livros
echo    - ‚úÖ Busca por ID
echo    - ‚úÖ Atualiza√ß√£o de livros
echo    - ‚úÖ Dele√ß√£o de livros
echo    - ‚úÖ Tratamento de erros (404)
echo.
echo üåê Acesse o console H2 em: http://localhost:8080/h2-console
echo    JDBC URL: jdbc:h2:mem:testdb
echo    Username: sa
echo    Password: password

pause
